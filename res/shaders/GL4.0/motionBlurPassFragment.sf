// shadertype=<glsl>
#version 400 core
layout(location = 0) out vec4 uni_motionBlurPassRT0;
in vec2 thefrag_TexCoord;

uniform sampler2D uni_motionVectorTexture;
uniform sampler2D uni_TAAPassRT0;

void main()
{
	vec2 MotionVector = texture(uni_motionVectorTexture, thefrag_TexCoord).xy / 2.0;
	if (MotionVector == vec2(0.0, 0.0))
	{
		uni_motionBlurPassRT0 = texture(uni_TAAPassRT0, thefrag_TexCoord);
	}
	else
	{
		vec4 result = texture(uni_TAAPassRT0, thefrag_TexCoord);
		for (int i = 1; i < 8; ++i) {
			vec2 offset = MotionVector * (float(i) / float(8 - 1));
			result += texture(uni_TAAPassRT0, thefrag_TexCoord + offset);
		}

		result /= float(8);

		//use alpha channel as mask
		uni_motionBlurPassRT0 = vec4(result.rgb, 1.0);
	}
}