// shadertype=<glsl>
#version 400 core
layout(location = 0) out vec4 uni_motionBlurPassRT0;
in vec2 thefrag_TexCoord;

uniform sampler2D uni_motionVectorTexture;
uniform sampler2D uni_TAAPassRT0;

void main()
{
	vec2 texelSize = 1.0 / vec2(textureSize(uni_TAAPassRT0, 0));
	vec2 screenTexCoords = gl_FragCoord.xy * texelSize;
	vec2 MotionVector = texture(uni_motionVectorTexture, screenTexCoords).xy * 2.0;

	if (MotionVector == vec2(0.0, 0.0))
	{
		uni_motionBlurPassRT0 = texture(uni_TAAPassRT0, thefrag_TexCoord);
	}
	else
	{
		vec4 result;
		for (int i = 0; i < 4; i++) {
			vec2 offset = MotionVector * (float(i) / 4.0f);
			result += texture(uni_TAAPassRT0, thefrag_TexCoord + offset);
		}

		result /= 4.0f;

		//use alpha channel as mask
		uni_motionBlurPassRT0 = vec4(result.rgb, 1.0);
	}
}