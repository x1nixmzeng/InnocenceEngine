// shadertype=glsl
#version 330 core
layout(location = 0) out vec2 uni_brdfMSLUT;
in vec2 TexCoords;

uniform sampler2D uni_brdfLUT;

// ----------------------------------------------------------------------------
void main()
{
    float averangeRsF1 = 0.0f;
	float currentRsF1 = 0.0f;
	const uint textureSize = 512u;
	// "Real-Time Rendering", 4th edition, pg. 346, "9.8.2 Multiple-Bounce Surface Reflection", "The function $\overline{RsF1}$ is the cosine-weighted average value of RsF1 over the hemisphere"
    for(uint i = 0u; i < textureSize; ++i)
    {
		currentRsF1 = texture(uni_brdfLUT, vec2(float(i) / float(textureSize), TexCoords.y)).b;
		averangeRsF1 += currentRsF1;
	}
	averangeRsF1 /= float(textureSize);

    uni_brdfMSLUT = vec2(averangeRsF1, 0.0);
}